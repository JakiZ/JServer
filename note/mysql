1、登录mysql
    mysql -u username -p password;
2、退出
    exit;
3、显示数据库
    show databases;
4、新建数据库
    create database 数据库名;
5、选中数据库
    use 数据库名;
6、查看表
    show tables;
7、删除库
    drop database 数据库名;
8、创建表
    create table 表名 (列名1 类型1,列名2 类型2 ...);
    create table 表名 (列名1 类型1 primary key auto_increment,列名2 类型2 ...)charset utf8;
9、修改表
    9.1 修改表名
        rename table 旧表名 to 新表名;
    9.2 添加列
        alter table 表名 add 列名1 类型1 默认值1(可选)
        默认新增列在最后一列
        alter table 表名 add 列名1 类型1 默认值1(可选) after 已有列名1
        新增列在已有列名1后一列
        alter table 表名 add 列名1 类型1 默认值1(可选) first
        新增列在第一列
    9.3 修改列类型
        alter table 表名 modify 列名 新类型
    9.4 修改列名
        alter table 表名 chang 旧列名 新列名
    9.5 删除列
        alter table 表名 drop 列名
10、删除表
    drop table 表名;
11、查看表结构
    desc 表名;
12、表增值
    insert into 表名 (列名1,列名2, ...) values(值1,值2,...);
13、表查值
    select * from 表名
    select (列名1,列名2,...) from 表名 条件
14、表改值
    update 表名 set xx=XX,zz=ZZ 条件
15、表删行
    delete from 表名 条件
16、数据类型
    16.1 整型(默认有符号)
        16.1.1 tinyint  微小整型  1B (-128 ~ 127)       (0~255)
        16.1.2 smallint 小整型    2B (-2^15 ~ 2^15-1)   (0 ~ 2^16)
        16.1.3 mediumint 中整型   3B (-2^23 ~ 2^23-1)   (0 ~ 2^24)
        16.1.4 int         整型   4B (-2^31 ~ 2^31-1)   (0 ~ 2^32)
        16.1.5 bigint    长整型   8B (-2^63 ~ 2^63-1)   (0 ~ 2^64)
            可选属性：
                 整型(M)  宽度，只有当有zerofill才有意义
                 unsigned 无符号
                 zerofill 零填充，默认设置了unsigned
    16.2 浮点型
        16.2.1 float(M,D)   4B
        16.2.2 decimal(M,D) 8B
           M:精度，表示浮点数的总位数，不包含小数点；D:标度，小数的位数
           会自动四舍五入，当最后一位是5时，如果它前面是1379则进位，否则不进位
    16.3 字符型
        16.3.1 char(M)
            定长字符串，M表示可容纳的 字符 的个数，不是占用的字节数
            如果实际字符X<M，会在改字符后自动补足空格
            0<= M <= 255
        16.3.2 varchar(M)
            变长字符串，M表示可容纳的 字符 的个数，不是占用的字节数，；
            当实际的字符个数X<M;则M会自动设置为X+(1-2)字节，不会在后面补足空格，而且会丢弃后面的空格
            0<= M <=65535
        16.3.3 text
            文本串，较大的文本串，一般是2w-5w字符，受字符集影响，
    16.4 时间型
        16.4.1 year
            年，1B，表示1901-2155年
            如输入两位年份：
                00-69 ：2000-2069
                70-99 ：1970-1999
        16.4.2 date
            日期，yyyy-MM-dd，1000-01-01 ~ 9999-12-31
        16.4.3 time
            时间，HH：mm：ss，-838:59:59 ~ -838:59:59
        16.4.4 datatime
            日期时间，yyyy-MM-dd HH：mm：ss，1000-01-01 00:00:00 ~ 9999-12-31 12:59:59
17、设置列默认值
    alter table 表名 add 列名 类型 not null default 默认值
18、select子句
    18.1 where
        18.1.1 常用运算符
            <
            <=
            >
            >=
            =
            <> / !=不等于
            between 在某范围内
            in 在某集合内
            not / ! 逻辑非
            or / || 逻辑或
            and / && 逻辑与
        18.1.2 模糊查询 like
            % 通配符，匹配任意个字符
            _ 通配符，匹配一个字符
    18.2 group by 分组
        18.2.1 统计函数
            min   求最小值
            max   求最大值
            sum   求和
            avg   求平均数
            count 求数量
    18.3 having 从前一次查询结果中筛选满足条件的结果
    18.4 order by 排序
        18.4.1 order by 列名
            asc  升序排列 默认
            desc 降序排列
            可以按多字段依次排序，不同字段排序需要逗号隔开
        18.4.2 limit offset,N
            offset 偏移量，可不给定，默认值0
            N 取出条目数
19、子查询
    19.1 where子查询
        把内层查询的结果，当作外层查询的条件
    19.2 from子查询
        把内层查询的结果当作外层查询的临时表再次查询
    19.3 exist子查询
        把外层查询结果拿到内层，看内层查询结果是否成立
20、union 联合
    20.1 把两次查询结果合并起来
    20.2 联合的要求：
       20.2.1 要联合的表的列数要相同，列类型要一一对应
       20.2.2 union前后的列名可能不一致，一般以union前的列名为准
       20.2.3 union前后取出的两条数据相同，则两者查询结果只会记录其中一条，
              如果不需要这个特性，可以在union后加all
       20.2.4 如果子句中有limit 或 order by 则需要使用括号表明这些操作是针对子句还是整句
21、连接查询
      两个表连接起来（行笛卡尔积），然后使用条件筛选出合理的数据
      21.1 左连接  表1 left join 表2 on 条件
            21.1.1 左连接以左表为准，右表依次和左表连接，找不到的数据以NULL补齐，推荐使用左连接
      21.2 右连接 表1 right join 表2 on 条件
            21.2.1 右连接以右表为准，左表依次和右表连接，找不到的数据以NULL补齐
      21.3 内连接 表1 inner join 表2 on 条件
            21.3.1 查询左右表都有的数据，实际是左右连接的交集，并且不要左右连接中有NULL的那条记录
22、视图
     如果一个查询结果（虚拟表）经常被使用，可以把它定义成一个视图，保存起来供其他查询用
     22.1 语法
        create view 视图名 as select语句
     22.2 作用
        22.2.1 简化查询
        22.2.2 数据库权限管理
        22.2.3 大数据分表
     22.3 修改视图
        alter view 视图名 as select
     22.4 表和视图的关系
        22.4.1 表改变会改变视图的数据
        22.4.2 视图的增删改会影响表
        22.4.3 视图数据和表一一对应时，可以修改，
               对于视图的insert，应注意，视图必须包含表中没有默认值的列
        22.4.4 视图的algorithm
            merge 当引用视图时，引用视图的语句与定义视图的语句合并
                这个不会创建临时表，只会把视图的查询规则和引用视图的语句的规则合并
            temptable 当引用视图时，根据视图的创建语法建立一个临时表
                会真的创建一个视图的虚拟表
            undefined 未定义，由系统自动选择
23、字符集和校对集
    23.1 字符集
        服务器默认字符集
        数据库默认字符集
        表默认字符集
        列字符集
        如果一个等级字符没有指定，则继承上一级

        set character_set_client = xxx 设置客户端字符集
        set character_set_connection = xxx 设置连接器字符集
        set character_set_result = xxx 设置查询结果字符集
        set name xxx 效果同上三句话
    23.2 校对集
        校对集其实就是排序规则
        设置校对集可以在建表时，指定
            collate 校对集
24、触发器
    24.1 定义：监视某种情况发生而触发的某种操作
    24.2 应用：
            某个sql操作(增删改)后一定要进行另一个sql操作（增删改），可以使用触发器
    24.3 要点
        监视地点
        触发时间
        监视事件
        触发事件
    24.4 语法
    delimiter $ 修改结束符为$

     create trigger 触发器名 before/after sql操作 on 触发操作需要修改的表
     for each row
     begin
            触发器触发的sql操作$
     end$

     如果要应用新增行的值，需要使用new.列名
     after : 先完成数据的增删改，在触发触发器的操作，触发器的操作无法影响前面的操作
     before: 触发语句先于监视的增删改，可以判断触发器修改后的情况


     删除触发器
     drop trigger 触发器名
25、事务
    25.1 存储引擎
        数据在存储介质中的存储方式
            1、Myisam
                批量插入快，锁表
            2、InnoDB
                安全性好，锁行
    25.2 事务
         定义：指一组操作，要么都执行成功，要么都执行失败
         特性：
            原子性：事务内的操作可以分割成一个个基础的操作
            隔离性：事件中间的结果是不可见的
            一致性：事务发生前后，数据必须保持总数相等
            持久性：事务产生的影响不能撤销
    25.3 语法
         start transaction;
         事务语句集(这些语句只能影响到事务日志文件，不能作用到数据表文件)
         commit / rollback;
26、备份和恢复
    26.1 备份 备份是sql语句，不是直接复制数据库
        mysqldump -u登录名 -p密码 数据库名 表名1, 表名2,... > 数据备份的硬盘地址
        mysqldump -uroot test account > D:\\account.sql

        mysqldump -u登录名 -p密码 数据库名  > 数据备份的硬盘地址
        导出一个数据库
        mysqldump -u登录名 -p密码 数据库名 (-B 库名1,库名2,...) > 数据备份的硬盘地址
        导出多个数据库
        mysqldump -u登录名 -p密码 数据库名 -A > 数据备份的硬盘地址
        导出全部数据库

    26.2 恢复
        source  数据库备份的硬盘地址
        use 库名 source 数据表备份的硬盘地址
27、索引
       给数据列加索引是为了加快查询速度，但是会减慢增删改的速度
       不要过度添加索引

       27.1 索引类型
            27.1.1 普通索引 index
                只能加快查询速度
            27.1.2 唯一索引 unique index
                列上的值不能重复
            27.1.3 主键索引 primary key
                主键必唯一，唯一不一定是主键
                一张表只能有一个主键，可有多个唯一索引
            27.1.4 全文索引 fulltext index
                默认情况下，对中文没有什么影响

                match 全文索引词 against ('关键字')
       27.2 查看表的索引情况
            show index from 表名
       27.3 建立索引
            alter table 表名 add index/unique/fulltext [索引名] (列名)
            alter table 表名 add primary key (列名)

            alter table 表名 drop index 索引名
            alter table 表名 drop primary key
28、存储过程
    把一组sql操作封装起来，一旦使用时，可以调用；可以理解成函数
    存储过程没有返回值
    可以使用if/else/end if 、case、 while
    declare 变量 变量类型
    set 变量 = 变量值;

    show procedure 显示存储过程

    delimiter $
    create procedure 存储过程名字(参数值1 参数类型1)
    begin
        sql语句集
    end $

    call c存储过程名字()$

    drop procedure 存储过程名字






